{"version":3,"sources":["webpack:///./src/components/atoms/Subtitle.tsx","webpack:///./src/components/organisms/BaseArticlePageLayout.tsx","webpack:///./src/components/templates/TagTemplate.tsx"],"names":["Subtitle","children","Text","styled","props","Wrapper","BaseArticlePageLayout","articleHeader","articles","profile","pagination","ArticleHeader","ArticleArea","PaginationArea","ProfileArea","TagTemplate","pageContext","data","tag","postEdges","config","rel","href","siteUrl","context"],"mappings":"8FAAA,uEAEaA,EAAW,SAAC,GAAiB,IAAfC,EAAe,EAAfA,SACvB,OAAQ,yBACN,+BADF,KAIEC,EAAOC,IAAH,yEAAGA,CAAH,+BAEC,mBAAWC,cAAX,aAELC,EAAUF,IAAH,4EAAGA,CAAH,yGAKG,mBAAWC,cAAX,a,oCChBhB,uEAEaE,EAAwB,SAAC,GAAqD,IAAnDC,EAAmD,EAAnDA,cAAeC,EAAoC,EAApCA,SAAUC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,WACtE,OAAQ,yBACLH,GAAiB,yBADZ,GAEN,yBAFM,GAGN,yBAHM,GAIN,yBAJF,KAOEF,EAAUF,IAAH,qFAAGA,CAAH,oJAOC,mBAAWC,eAAX,kBAERO,EAAgBR,IAAH,2FAAGA,CAAH,CAAnB,gBAGMS,EAAcT,IAAH,yFAAGA,CAAH,CAAjB,gBAGMU,EAAiBV,IAAH,4FAAGA,CAAH,CAApB,gBAGMW,EAAcX,IAAH,yFAAGA,CAAH,CAAjB,iB,kCC5BA,qLAUaY,EAAc,SAAC,GAA0B,IAAxBC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KAC/BC,EAAQF,EADkC,IAE5CG,EAAYF,oBAAlB,MACA,OAAQ,2BACN,2BACE,+BAAWG,IAAX,gBADF,GAEE,0BAAMC,IAAN,YAAsBC,KAAI,GAAKF,IAAOG,WAGxC,8BACE,uBAAuBhB,cAAe,2BAAtC,GAAkEC,SAAU,uBAAaW,UAAWA,IAAcT,WAAY,uBAAWc,QAASR,IAAgBP,QAAS,iCA0CnL","file":"component---src-components-templates-tag-template-tsx-0822f83ad9d2163e9133.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nexport const Subtitle = ({ children }) => {\n    return (<Wrapper>\n      <Text>ðŸŒ™ {children}</Text>\n    </Wrapper>);\n};\nconst Text = styled.div `\n  font-size: 30px;\n  color: ${(props) => props.theme.color.baseLight};\n`;\nconst Wrapper = styled.div `\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 30px;\n  background: ${(props) => props.theme.color.baseDark};\n  margin-top: 20px;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nexport const BaseArticlePageLayout = ({ articleHeader, articles, profile, pagination }) => {\n    return (<Wrapper>\n      {articleHeader && <ArticleHeader>{articleHeader}</ArticleHeader>}\n      <ArticleArea>{articles}</ArticleArea>\n      <PaginationArea>{pagination}</PaginationArea>\n      <ProfileArea>{profile}</ProfileArea>\n    </Wrapper>);\n};\nconst Wrapper = styled.div `\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  align-content: space-between;\n  flex-wrap: wrap;\n  margin: 0 ${(props) => props.theme.layout.marginVertical}px;\n`;\nconst ArticleHeader = styled.div `\n  width: 100%;\n`;\nconst ArticleArea = styled.div `\n  width: 100%;\n`;\nconst PaginationArea = styled.div `\n  width: 100%;\n`;\nconst ProfileArea = styled.div `\n  width: 100%;\n`;\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport { graphql } from 'gatsby';\nimport config from '../../../data/SiteConfig';\nimport Layout from '../organisms/Layout';\nimport { ArticleList } from '../organisms/ArticleList';\nimport { Subtitle } from '../atoms/Subtitle';\nimport { AuthorCard } from '../molecules';\nimport { BaseArticlePageLayout } from '../organisms/BaseArticlePageLayout';\nimport { Paginator } from '../atoms';\nexport const TagTemplate = ({ pageContext, data }) => {\n    const { tag } = pageContext;\n    const postEdges = data.allMarkdownRemark.edges;\n    return (<Layout>\n      <Helmet>\n        <title>{`${config.siteTitle} | ${tag}`}</title>\n        <link rel=\"canonical\" href={`${config.siteUrl}`}/>\n      </Helmet>\n\n      <main>\n        <BaseArticlePageLayout articleHeader={<Subtitle>{tag}</Subtitle>} articles={<ArticleList postEdges={postEdges}/>} pagination={<Paginator context={pageContext}/>} profile={<AuthorCard />}/>\n      </main>\n    </Layout>);\n};\nexport const tagPageQuery = graphql `\n  query TagPageQuery($tag: String, $skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      sort: {fields: [fields____createdAt], order: DESC}\n      limit: $limit\n      skip: $skip\n      filter: {frontmatter: {tags: {in: [$tag]}}}\n    ) {\n      edges {\n        node {\n          fields {\n            _slug\n            _createdAt\n            _updatedAt\n          }\n          excerpt(truncate: true)\n          timeToRead\n          frontmatter {\n            title\n            tags\n            category\n            cover {\n              publicURL\n              childImageSharp {\n                fluid {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n              extension\n            }\n            createdAt\n            updatedAt\n          }\n        }\n      }\n    }\n  }\n`;\nexport default TagTemplate;\n"],"sourceRoot":""}