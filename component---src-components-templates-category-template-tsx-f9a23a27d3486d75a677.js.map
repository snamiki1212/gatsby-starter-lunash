{"version":3,"sources":["webpack:///./src/components/organisms/ArticlePreviewList.tsx","webpack:///./src/components/atoms/CategoryBanner.tsx","webpack:///./src/components/templates/CategoryTemplate.tsx","webpack:///./node_modules/@material-ui/core/esm/useMediaQuery/useMediaQuery.js"],"names":["ArticlePreviewList","postEdges","context","description","theme","useTheme","isSP","useMediaQuery","ArticlePreview","style","flexDirection","padding","key","edge","postInfo","PageContainer","styled","MainArea","AsideArea","colors","Text","Container","CategoryBanner","categoryName","CategoryTemplate","pageContext","data","category","config","rel","href","siteUrl","margin","queryInput","options","arguments","length","undefined","props","name","query","replace","supportMatchMedia","window","matchMedia","_props$options","_props$options$defaul","defaultMatches","_props$options$matchM","_props$options$noSsr","noSsr","_props$options$ssrMat","ssrMatchMedia","_React$useState","matches","match","setMatch","active","queryList","updateMatch","addListener","removeListener"],"mappings":"2FAAA,mIAOaA,EAAqB,SAAC,GAAyC,IAAvCC,EAAuC,EAAvCA,UAAWC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,YAC/CC,EAAQC,cACRC,EAAOC,YAAcH,mBAA3B,OACMI,EAAiBF,EAAO,EAAH,EAA3B,IACA,OAAQ,qBAAeG,MAAO,CAC1BC,cAAeJ,EAAO,SADI,MAE1BK,QAASL,EAAO,MAAQ,SAE1B,2BAEE,uBAAwBG,MAAO,CAAEC,cAAeJ,EAAO,SAAW,QAC/DL,EAAA,KAAc,mBAAW,qBAAgBW,IAAKC,mBAArB,MAAkDC,SAAUD,QAExF,uBAAWX,QAASA,KAGtB,yBACE,sBADF,MAEE,uBAAcA,QAASA,OAIzBa,EAAgBC,IAAH,wFAAGA,CAAH,CAAnB,8DAKMC,EAAWD,IAAH,mFAAGA,CAAH,CAAd,+CAKME,EAAYF,IAAH,sFAAGA,CAAH,iFAKOG,IALtB,Y,oMCpCMC,EAAOJ,IAAH,+EAAGA,CAAH,CAAV,oBAGMK,EAAYL,IAAH,oFAAGA,CAAH,kGAKCG,IALD,UAMJA,IANX,QAQaG,EAAiB,SAAC,GAAsB,IAApBC,EAAoB,EAApBA,aAC7B,OAAQ,yBACN,8BADF,KCRSC,EAAmB,SAAC,GAA0B,IAAxBC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KACpCC,EAAaF,EADkC,SAEjDxB,EAAYyB,oBAAlB,MACA,OAAQ,2BACN,2BACE,+BAAWE,IAAX,gBADF,GAEE,0BAAMC,IAAN,YAAsBC,KAAI,GAAKF,IAAOG,WAGxC,uBAAoB9B,UAApB,EAA0CC,QAA1C,EAAgEC,YAAa,yBAAKM,MAAO,CAAEuB,OAAQ,WAC7F,qBAAgBT,aAAcI,SAyC1C,a,kCC1DA,sFAGe,SAASpB,EAAc0B,GACpC,IAAIC,EAAUC,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,GAC9E/B,EAAQ,cACRkC,EAAQ,YAAc,CACxBlC,MAAOA,EACPmC,KAAM,mBACND,MAAO,KAST,IAAIE,EAA8B,mBAAfP,EAA4BA,EAAW7B,GAAS6B,EACnEO,EAAQA,EAAMC,QAAQ,eAAgB,IAKtC,IAAIC,EAAsC,oBAAXC,aAAuD,IAAtBA,OAAOC,WAEnEC,EAAiB,YAAS,GAAIP,EAAOJ,GACrCY,EAAwBD,EAAeE,eACvCA,OAA2C,IAA1BD,GAA2CA,EAC5DE,EAAwBH,EAAeD,WACvCA,OAAuC,IAA1BI,EAAmCN,EAAoBC,OAAOC,WAAa,KAAOI,EAC/FC,EAAuBJ,EAAeK,MACtCA,OAAiC,IAAzBD,GAA0CA,EAClDE,EAAwBN,EAAeO,cACvCA,OAA0C,IAA1BD,EAAmC,KAAOA,EAE1DE,EAAkB,YAAe,WACnC,OAAIH,GAASR,EACJE,EAAWJ,GAAOc,QAGvBF,EACKA,EAAcZ,GAAOc,QAKvBP,KAELQ,EAAQF,EAAgB,GACxBG,EAAWH,EAAgB,GAoC/B,OAlCA,aAAgB,WACd,IAAII,GAAS,EAEb,GAAKf,EAAL,CAIA,IAAIgB,EAAYd,EAAWJ,GAEvBmB,EAAc,WAIZF,GACFD,EAASE,EAAUJ,UAMvB,OAFAK,IACAD,EAAUE,YAAYD,GACf,WACLF,GAAS,EACTC,EAAUG,eAAeF,OAE1B,CAACnB,EAAOI,EAAYF,IAUhBa","file":"component---src-components-templates-category-template-tsx-f9a23a27d3486d75a677.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { colors } from '../../../data/color';\nimport { Paginator, SubPageLinks, ArticlesPreviewWrapper } from '../atoms';\nimport { AuthorCard, ArticlePreviewCard, ArticlePreviewLine } from '../molecules';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nexport const ArticlePreviewList = ({ postEdges, context, description, }) => {\n    const theme = useTheme();\n    const isSP = useMediaQuery(theme.breakpoints.down('sm'));\n    const ArticlePreview = isSP ? ArticlePreviewLine : ArticlePreviewCard;\n    return (<PageContainer style={{\n        flexDirection: isSP ? 'column' : 'row',\n        padding: isSP ? '0px' : '25px',\n    }}>\n      <MainArea>\n        {description}\n        <ArticlesPreviewWrapper style={{ flexDirection: isSP ? 'column' : 'row' }}>\n          {postEdges.map((edge) => (<ArticlePreview key={edge.node.frontmatter.title} postInfo={edge}/>))}\n        </ArticlesPreviewWrapper>\n        <Paginator context={context}/>\n      </MainArea>\n\n      <AsideArea>\n        <AuthorCard />\n        <SubPageLinks context={context}/>\n      </AsideArea>\n    </PageContainer>);\n};\nconst PageContainer = styled.div `\n  display: flex;\n  justify-content: space-around;\n  flex-wrap: wrap;\n`;\nconst MainArea = styled.div `\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n`;\nconst AsideArea = styled.aside `\n  flex: 0;\n  min-width: 300px;\n  padding: 50px;\n  border-radius: 10px;\n  background-color: ${colors.grayLight};\n`;\n","import React from 'react';\nimport { colors } from '../../../data/color';\nimport styled from 'styled-components';\nconst Text = styled.div `\n  font-size: 30px;\n`;\nconst Container = styled.div `\n  padding: 30px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: ${colors.grayLight};\n  color: ${colors.black1};\n`;\nexport const CategoryBanner = ({ categoryName, }) => {\n    return (<Container>\n      <Text>ðŸš€{categoryName}</Text>\n    </Container>);\n};\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport { graphql } from 'gatsby';\nimport config from '../../../data/SiteConfig';\nimport Layout from '../organisms/Layout';\nimport { ArticlePreviewList } from '../organisms/ArticlePreviewList';\nimport { CategoryBanner } from '../atoms/CategoryBanner';\nexport const CategoryTemplate = ({ pageContext, data }) => {\n    const { category } = pageContext;\n    const postEdges = data.allMarkdownRemark.edges;\n    return (<Layout>\n      <Helmet>\n        <title>{`${config.siteTitle} | ${category}`}</title>\n        <link rel=\"canonical\" href={`${config.siteUrl}`}/>\n      </Helmet>\n\n      <ArticlePreviewList postEdges={postEdges} context={pageContext} description={<div style={{ margin: '0 30px' }}>\n            <CategoryBanner categoryName={category}/>\n          </div>}/>\n    </Layout>);\n};\nexport const categoryPageQuery = graphql `\n  query CategoryPageQuery($category: String, $skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      sort: {fields: [fields____createdAt], order: DESC}\n      limit: $limit\n      skip: $skip\n      filter: {frontmatter: {category: {eq: $category}}}\n    ) {\n      edges {\n        node {\n          fields {\n            _slug\n            _createdAt\n            _updatedAt\n          }\n          excerpt(truncate: true)\n          timeToRead\n          frontmatter {\n            title\n            tags\n            cover {\n              publicURL\n              childImageSharp {\n                fluid {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n              extension\n            }\n            createdAt\n            updatedAt\n          }\n        }\n      }\n    }\n  }\n`;\nexport default CategoryTemplate;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { getThemeProps, useTheme } from '@material-ui/styles';\nexport default function useMediaQuery(queryInput) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var theme = useTheme();\n  var props = getThemeProps({\n    theme: theme,\n    name: 'MuiUseMediaQuery',\n    props: {}\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof queryInput === 'function' && theme === null) {\n      console.error(['Material-UI: The `query` argument provided is invalid.', 'You are providing a function without a theme in the context.', 'One of the parent elements needs to use a ThemeProvider.'].join('\\n'));\n    }\n  }\n\n  var query = typeof queryInput === 'function' ? queryInput(theme) : queryInput;\n  query = query.replace(/^@media( ?)/m, ''); // Wait for jsdom to support the match media feature.\n  // All the browsers Material-UI support have this built-in.\n  // This defensive check is here for simplicity.\n  // Most of the time, the match media logic isn't central to people tests.\n\n  var supportMatchMedia = typeof window !== 'undefined' && typeof window.matchMedia !== 'undefined';\n\n  var _props$options = _extends({}, props, options),\n      _props$options$defaul = _props$options.defaultMatches,\n      defaultMatches = _props$options$defaul === void 0 ? false : _props$options$defaul,\n      _props$options$matchM = _props$options.matchMedia,\n      matchMedia = _props$options$matchM === void 0 ? supportMatchMedia ? window.matchMedia : null : _props$options$matchM,\n      _props$options$noSsr = _props$options.noSsr,\n      noSsr = _props$options$noSsr === void 0 ? false : _props$options$noSsr,\n      _props$options$ssrMat = _props$options.ssrMatchMedia,\n      ssrMatchMedia = _props$options$ssrMat === void 0 ? null : _props$options$ssrMat;\n\n  var _React$useState = React.useState(function () {\n    if (noSsr && supportMatchMedia) {\n      return matchMedia(query).matches;\n    }\n\n    if (ssrMatchMedia) {\n      return ssrMatchMedia(query).matches;\n    } // Once the component is mounted, we rely on the\n    // event listeners to return the correct matches value.\n\n\n    return defaultMatches;\n  }),\n      match = _React$useState[0],\n      setMatch = _React$useState[1];\n\n  React.useEffect(function () {\n    var active = true;\n\n    if (!supportMatchMedia) {\n      return undefined;\n    }\n\n    var queryList = matchMedia(query);\n\n    var updateMatch = function updateMatch() {\n      // Workaround Safari wrong implementation of matchMedia\n      // TODO can we remove it?\n      // https://github.com/mui-org/material-ui/pull/17315#issuecomment-528286677\n      if (active) {\n        setMatch(queryList.matches);\n      }\n    };\n\n    updateMatch();\n    queryList.addListener(updateMatch);\n    return function () {\n      active = false;\n      queryList.removeListener(updateMatch);\n    };\n  }, [query, matchMedia, supportMatchMedia]);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue({\n      query: query,\n      match: match\n    });\n  }\n\n  return match;\n}"],"sourceRoot":""}