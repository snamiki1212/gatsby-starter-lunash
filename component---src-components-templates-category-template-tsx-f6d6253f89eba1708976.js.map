{"version":3,"sources":["webpack:///./src/components/organisms/BaseArticlePageLayout.tsx","webpack:///./src/components/atoms/CategoryBanner.tsx","webpack:///./src/components/templates/CategoryTemplate.tsx"],"names":["BaseArticlePageLayout","articleHeader","articles","profile","pagination","Wrapper","styled","props","ArticleHeader","ArticleArea","PaginationArea","ProfileArea","Text","colors","CategoryBanner","categoryName","CategoryTemplate","pageContext","data","category","postEdges","config","rel","href","siteUrl","style","margin","context"],"mappings":"6FAAA,uEAEaA,EAAwB,SAAC,GAAqD,IAAnDC,EAAmD,EAAnDA,cAAeC,EAAoC,EAApCA,SAAUC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,WACtE,OAAQ,yBACLH,GAAiB,yBADZ,GAEN,yBAFM,GAGN,yBAHM,GAIN,yBAJF,KAOEI,EAAUC,IAAH,qFAAGA,CAAH,oJAOC,mBAAWC,eAAX,kBAERC,EAAgBF,IAAH,2FAAGA,CAAH,CAAnB,gBAGMG,EAAcH,IAAH,yFAAGA,CAAH,CAAjB,gBAGMI,EAAiBJ,IAAH,4FAAGA,CAAH,CAApB,gBAGMK,EAAcL,IAAH,yFAAGA,CAAH,CAAjB,iB,oMCzBMM,EAAON,IAAH,+EAAGA,CAAH,CAAV,oBAGMD,EAAUC,IAAH,kFAAGA,CAAH,kGAKGO,IALH,qBAMFA,IANX,mBAQaC,EAAiB,SAAC,GAAsB,IAApBC,EAAoB,EAApBA,aAC7B,OAAQ,yBACN,8BADF,K,oCCLSC,EAAmB,SAAC,GAA0B,IAAxBC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KACpCC,EAAaF,EADkC,SAEjDG,EAAYF,oBAAlB,MACA,OAAQ,2BACN,2BACE,+BAAWG,IAAX,gBADF,GAEE,0BAAMC,IAAN,YAAsBC,KAAI,GAAKF,IAAOG,WAGxC,uBAAuBvB,cAAe,yBAAKwB,MAAO,CAAEC,OAAQ,WACtD,qBAAgBX,aAAcI,KACxBjB,SAAU,uBAAakB,UAAWA,IAAchB,WAAY,uBAAWuB,QAASV,IAAgBd,QAAS,gCAyC3H","file":"component---src-components-templates-category-template-tsx-f6d6253f89eba1708976.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nexport const BaseArticlePageLayout = ({ articleHeader, articles, profile, pagination }) => {\n    return (<Wrapper>\n      {articleHeader && <ArticleHeader>{articleHeader}</ArticleHeader>}\n      <ArticleArea>{articles}</ArticleArea>\n      <PaginationArea>{pagination}</PaginationArea>\n      <ProfileArea>{profile}</ProfileArea>\n    </Wrapper>);\n};\nconst Wrapper = styled.div `\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  align-content: space-between;\n  flex-wrap: wrap;\n  margin: 0 ${(props) => props.theme.layout.marginVertical}px;\n`;\nconst ArticleHeader = styled.div `\n  width: 100%;\n`;\nconst ArticleArea = styled.div `\n  width: 100%;\n`;\nconst PaginationArea = styled.div `\n  width: 100%;\n`;\nconst ProfileArea = styled.div `\n  width: 100%;\n`;\n","import React from 'react';\nimport { colors } from '../../../data/color';\nimport styled from 'styled-components';\nconst Text = styled.div `\n  font-size: 30px;\n`;\nconst Wrapper = styled.div `\n  padding: 30px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: ${colors.DEPRECATED_grayLight};\n  color: ${colors.DEPRECATED_black1};\n`;\nexport const CategoryBanner = ({ categoryName, }) => {\n    return (<Wrapper>\n      <Text>ðŸš€{categoryName}</Text>\n    </Wrapper>);\n};\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport { graphql } from 'gatsby';\nimport config from '../../../data/SiteConfig';\nimport Layout from '../organisms/Layout';\nimport { ArticleList } from '../organisms/ArticleList';\nimport { CategoryBanner } from '../atoms/CategoryBanner';\nimport { AuthorCard } from '../molecules';\nimport { BaseArticlePageLayout } from '../organisms/BaseArticlePageLayout';\nimport { Paginator } from '../atoms';\nexport const CategoryTemplate = ({ pageContext, data }) => {\n    const { category } = pageContext;\n    const postEdges = data.allMarkdownRemark.edges;\n    return (<Layout>\n      <Helmet>\n        <title>{`${config.siteTitle} | ${category}`}</title>\n        <link rel=\"canonical\" href={`${config.siteUrl}`}/>\n      </Helmet>\n\n      <BaseArticlePageLayout articleHeader={<div style={{ margin: '0 30px' }}>\n            <CategoryBanner categoryName={category}/>\n          </div>} articles={<ArticleList postEdges={postEdges}/>} pagination={<Paginator context={pageContext}/>} profile={<AuthorCard />}/>\n    </Layout>);\n};\nexport const categoryPageQuery = graphql `\n  query CategoryPageQuery($category: String, $skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      sort: {fields: [fields____createdAt], order: DESC}\n      limit: $limit\n      skip: $skip\n      filter: {frontmatter: {category: {eq: $category}}}\n    ) {\n      edges {\n        node {\n          fields {\n            _slug\n            _createdAt\n            _updatedAt\n          }\n          excerpt(truncate: true)\n          timeToRead\n          frontmatter {\n            title\n            tags\n            category\n            cover {\n              publicURL\n              childImageSharp {\n                fluid {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n              extension\n            }\n            createdAt\n            updatedAt\n          }\n        }\n      }\n    }\n  }\n`;\nexport default CategoryTemplate;\n"],"sourceRoot":""}