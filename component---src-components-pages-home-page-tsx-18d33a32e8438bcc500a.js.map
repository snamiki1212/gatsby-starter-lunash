{"version":3,"sources":["webpack://gatsby-starter-lunash/./src/components/organisms/ArticleListLayout.tsx","webpack://gatsby-starter-lunash/./src/components/pages/HomePage.tsx"],"names":["ArticleListLayout","articleListHeader","articles","profile","pagination","Wrapper","ArticleAndSidebar","ArticleArea","ProfileSection","styled","props","theme","layout","marginVertical","HomePage","pageContext","postEdges","data","allMarkdownRemark","edges","config","rel","href","context"],"mappings":"wLAUaA,EAAqC,SAAC,GAK7C,IAJJC,EAII,EAJJA,kBACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,QACAC,EACI,EADJA,WAEA,OACE,gBAACC,EAAD,KACGJ,GAAqB,2BAAMA,GAC5B,gBAACK,EAAD,KACE,gBAACC,EAAD,KACE,2BAAML,GACN,2BAAME,IAER,gBAACI,EAAD,KAAiBL,MAMnBE,EAAUI,oBAAH,sEAAGA,CAAH,0CAGA,SAACC,GAAD,OAAWA,EAAMC,MAAMC,OAAOC,kBAGrCP,EAAoBG,oBAAH,gFAAGA,CAAH,4DAMjBF,EAAcE,oBAAH,0EAAGA,CAAH,oEAQXD,EAAiBC,oBAAH,6EAAGA,CAAH,uE,4KC5BPK,EAA4B,SAAC,GAAwB,IAAvBC,EAAuB,EAAvBA,YAMnCC,EAN0D,EAAVC,KAEpDC,kBAIkCC,MAGpC,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,KACE,6BAAQC,eACR,wBAAMC,IAAI,YAAYC,KAAI,GAAKF,eAEjC,gBAAC,KAAD,CAASJ,UAAWA,IAGpB,4BACE,gBAAC,IAAD,CACEd,SAAU,gBAAC,IAAD,CAAac,UAAWA,IAClCZ,WAAY,gBAAC,KAAD,CAAWmB,QAASR,IAChCZ,QAAS,gBAAC,KAAD,WAkEnB","file":"component---src-components-pages-home-page-tsx-18d33a32e8438bcc500a.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\ntype Props = {\n  articleListHeader?: React.ReactNode;\n  articles: React.ReactNode;\n  profile: React.ReactNode;\n  pagination: React.ReactNode;\n};\n\nexport const ArticleListLayout: React.FC<Props> = ({\n  articleListHeader,\n  articles,\n  profile,\n  pagination,\n}) => {\n  return (\n    <Wrapper>\n      {articleListHeader && <div>{articleListHeader}</div>}\n      <ArticleAndSidebar>\n        <ArticleArea>\n          <div>{articles}</div>\n          <div>{pagination}</div>\n        </ArticleArea>\n        <ProfileSection>{profile}</ProfileSection>\n      </ArticleAndSidebar>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  display: grid;\n  gap: 1rem;\n  padding: ${(props) => props.theme.layout.marginVertical}px;\n`;\n\nconst ArticleAndSidebar = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 300px;\n  gap: 2rem;\n`;\n\nconst ArticleArea = styled.div`\n  grid-column: 1 / 2;\n  @media (max-width: 700px) {\n    /* // TODO: dont use magic num */\n    grid-column: 1 / 3;\n  }\n`;\n\nconst ProfileSection = styled.div`\n  grid-column: span 1;\n  @media (max-width: 700px) {\n    /* // TODO: dont use magic num */\n    grid-column: span 2;\n  }\n`;\n","import {graphql} from 'gatsby';\nimport React from 'react';\nimport Helmet from 'react-helmet';\nimport config from '../../../data/SiteConfig';\nimport {IndexPageContext} from '../../../gatsby-node/types';\nimport {SEOMeta} from '../atoms';\nimport {Layout} from '../organisms/Layout';\nimport {ArticleList} from '../organisms/ArticleList';\nimport {MarkdownRemarkEdge} from '../../types';\n// import Img from 'gatsby-image';\nimport {AuthorCard} from '../molecules';\nimport {ArticleListLayout} from '../organisms/ArticleListLayout';\nimport {Paginator} from '../atoms';\n\ntype Props = {\n  pageContext: IndexPageContext;\n  data: {\n    allMarkdownRemark: IndexPageQuery;\n    // allFile: FeaturedImg;\n  };\n};\n\nexport const HomePage: React.FC<Props> = ({pageContext, data}) => {\n  const {\n    allMarkdownRemark,\n    // allFile\n  } = data;\n\n  const postEdges = allMarkdownRemark.edges;\n  // const childImageSharp = allFile.edges[0].node.childImageSharp;\n\n  return (\n    <Layout>\n      <Helmet>\n        <title>{config.siteTitle}</title>\n        <link rel=\"canonical\" href={`${config.siteUrl}`} />\n      </Helmet>\n      <SEOMeta postEdges={postEdges} />\n\n      {/* <Img fluid={childImageSharp.fluid} style={{maxHeight: '300px'}} /> */}\n      <main>\n        <ArticleListLayout\n          articles={<ArticleList postEdges={postEdges} />}\n          pagination={<Paginator context={pageContext} />}\n          profile={<AuthorCard />}\n        />\n      </main>\n    </Layout>\n  );\n};\n\n// const featuredImgPath = 'logos/logo.png';\nexport const homePageQuery = graphql`\n  query HomePageQuery($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      sort: {fields: [fields____createdAt], order: DESC}\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          fields {\n            _slug\n            _createdAt\n            _updatedAt\n          }\n          excerpt(truncate: true)\n          timeToRead\n          frontmatter {\n            title\n            tags\n            category\n            cover {\n              publicURL\n              childImageSharp {\n                fluid(maxWidth: 150, quality: 100) {\n                  ...GatsbyImageSharpFluid_withWebp\n                }\n              }\n            }\n            createdAt\n            updatedAt\n          }\n        }\n      }\n    }\n  }\n`;\n\n// allFile(filter: {relativePath: {in: \"logos/logo.png\"}}) {\n//   edges {\n//     node {\n//       childImageSharp {\n//         fluid {\n//           base64\n// aspectRatio\n// src\n// srcSet\n// sizes\n// originalImg\n//         }\n//       }\n//     }\n//   }\n// }\n\nexport interface IndexPageQuery {\n  edges: MarkdownRemarkEdge[];\n}\n\nexport default HomePage;\n"],"sourceRoot":""}