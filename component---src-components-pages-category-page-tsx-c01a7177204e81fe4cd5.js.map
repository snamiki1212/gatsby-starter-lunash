{"version":3,"sources":["webpack://gatsby-starter-lunash/./src/components/atoms/Subtitle.tsx","webpack://gatsby-starter-lunash/./src/components/organisms/ArticleListLayout.tsx","webpack://gatsby-starter-lunash/./src/components/pages/CategoryPage.tsx"],"names":["Subtitle","children","Wrapper","Text","styled","props","theme","color","baseLight","baseDark","ArticleListLayout","articleListHeader","articles","profile","pagination","ArticleListHeader","ArticlesArea","PaginationArea","ProfileArea","layout","marginVertical","CategoryPage","pageContext","data","category","postEdges","allMarkdownRemark","edges","config","rel","href","context"],"mappings":"wLAGaA,EAAqB,SAAC,GAAe,IAAdC,EAAc,EAAdA,SAClC,OACE,gBAACC,EAAD,KACE,gBAACC,EAAD,WAAUF,KAKVE,EAAOC,oBAAH,0DAAGA,CAAH,+BAEC,SAACC,GAAD,OAAWA,EAAMC,MAAMC,MAAMC,aAGlCN,EAAUE,oBAAH,6DAAGA,CAAH,yGAKG,SAACC,GAAD,OAAWA,EAAMC,MAAMC,MAAME,a,uFCXhCC,EAAqC,SAAC,GAAuD,IAAtDC,EAAsD,EAAtDA,kBAAmBC,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,WACxF,OACE,gBAACZ,EAAD,KACGS,GAAqB,gBAACI,EAAD,KAAoBJ,GAC1C,gBAACK,EAAD,KAAeJ,GACf,gBAACK,EAAD,KAAiBH,GACjB,gBAACI,EAAD,KAAcL,KAKdX,EAAUE,oBAAH,sEAAGA,CAAH,oJAOC,SAACC,GAAD,OAAWA,EAAMC,MAAMa,OAAOC,kBAGtCL,EAAoBX,oBAAH,gFAAGA,CAAH,iBAIjBY,EAAeZ,oBAAH,2EAAGA,CAAH,iBAIZa,EAAiBb,oBAAH,6EAAGA,CAAH,iBAIdc,EAAcd,oBAAH,0EAAGA,CAAH,kB,0LCzBJiB,EAAgC,SAAC,GAAwB,IAAvBC,EAAuB,EAAvBA,YAAaC,EAAU,EAAVA,KACnDC,EAAYF,EAAZE,SACDC,EAAYF,EAAKG,kBAAkBC,MAEzC,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,KACE,6BAAWC,cAAX,MAAiCJ,GACjC,wBAAMK,IAAI,YAAYC,KAAI,GAAKF,eAGjC,4BACE,gBAAC,IAAD,CACEjB,kBAAmB,gBAAC,IAAD,KAAWa,GAC9BZ,SAAU,gBAAC,IAAD,CAAaa,UAAWA,IAClCX,WAAY,gBAAC,KAAD,CAAWiB,QAAST,IAChCT,QAAS,gBAAC,KAAD,WAkDnB","file":"component---src-components-pages-category-page-tsx-c01a7177204e81fe4cd5.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nexport const Subtitle: React.FC = ({children}) => {\n  return (\n    <Wrapper>\n      <Text>ðŸŒ™ {children}</Text>\n    </Wrapper>\n  );\n};\n\nconst Text = styled.div`\n  font-size: 30px;\n  color: ${(props) => props.theme.color.baseLight};\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 30px;\n  background: ${(props) => props.theme.color.baseDark};\n  margin-top: 20px;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\ntype Props = {\n  articleListHeader?: React.ReactNode;\n  articles: React.ReactNode;\n  profile: React.ReactNode;\n  pagination: React.ReactNode;\n};\n\nexport const ArticleListLayout: React.FC<Props> = ({articleListHeader, articles, profile, pagination}) => {\n  return (\n    <Wrapper>\n      {articleListHeader && <ArticleListHeader>{articleListHeader}</ArticleListHeader>}\n      <ArticlesArea>{articles}</ArticlesArea>\n      <PaginationArea>{pagination}</PaginationArea>\n      <ProfileArea>{profile}</ProfileArea>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  align-content: space-between;\n  flex-wrap: wrap;\n  margin: 0 ${(props) => props.theme.layout.marginVertical}px;\n`;\n\nconst ArticleListHeader = styled.div`\n  width: 100%;\n`;\n\nconst ArticlesArea = styled.div`\n  width: 100%;\n`;\n\nconst PaginationArea = styled.div`\n  width: 100%;\n`;\n\nconst ProfileArea = styled.div`\n  width: 100%;\n`;\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport {graphql} from 'gatsby';\nimport config from '../../../data/SiteConfig';\nimport {CategoryPageContext} from '../../../gatsby-node/types';\nimport {Layout} from '../organisms/Layout';\nimport {ArticleList} from '../organisms/ArticleList';\nimport {Subtitle} from '../atoms/Subtitle';\nimport {MarkdownRemarkEdge} from '../../types';\nimport {AuthorCard} from '../molecules';\nimport {ArticleListLayout} from '../organisms/ArticleListLayout';\nimport {Paginator} from '../atoms';\n\ntype Props = {\n  pageContext: CategoryPageContext;\n  data: {allMarkdownRemark: CategoryPageQuery};\n};\n\nexport const CategoryPage: React.FC<Props> = ({pageContext, data}) => {\n  const {category} = pageContext;\n  const postEdges = data.allMarkdownRemark.edges;\n\n  return (\n    <Layout>\n      <Helmet>\n        <title>{`${config.siteTitle} | ${category}`}</title>\n        <link rel=\"canonical\" href={`${config.siteUrl}`} />\n      </Helmet>\n\n      <main>\n        <ArticleListLayout\n          articleListHeader={<Subtitle>{category}</Subtitle>}\n          articles={<ArticleList postEdges={postEdges} />}\n          pagination={<Paginator context={pageContext} />}\n          profile={<AuthorCard />}\n        />\n      </main>\n    </Layout>\n  );\n};\n\nexport const categoryPageQuery = graphql`\n  query CategoryPageQuery($category: String, $skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      sort: {fields: [fields____createdAt], order: DESC}\n      limit: $limit\n      skip: $skip\n      filter: {frontmatter: {category: {eq: $category}}}\n    ) {\n      edges {\n        node {\n          fields {\n            _slug\n            _createdAt\n            _updatedAt\n          }\n          excerpt(truncate: true)\n          timeToRead\n          frontmatter {\n            title\n            tags\n            category\n            cover {\n              publicURL\n              childImageSharp {\n                fluid {\n                  ...GatsbyImageSharpFluid_withWebp\n                }\n              }\n              extension\n            }\n            createdAt\n            updatedAt\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport interface CategoryPageQuery {\n  edges: MarkdownRemarkEdge[];\n}\n\nexport default CategoryPage;\n"],"sourceRoot":""}