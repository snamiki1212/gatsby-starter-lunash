{"version":3,"file":"component---src-components-pages-tag-page-tsx-51bfd9d31e44ab3ea01e.js","mappings":"wLAGaA,EAAqB,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAClC,OACE,gBAACC,EAAD,KACE,gBAACC,EAAD,SAAQF,KAKRE,EAAOC,EAAAA,GAAAA,IAAAA,WAAH,0DAAGA,CAAH,+BAEC,SAACC,GAAD,OAAWA,EAAMC,MAAMC,MAAMC,aAGlCN,EAAUE,EAAAA,GAAAA,IAAAA,WAAH,6DAAGA,CAAH,yGAKG,SAACC,GAAD,OAAWA,EAAMC,MAAMC,MAAME,a,wKCJhCC,EAA2B,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,YAAaC,EAAU,EAAVA,KAC9CC,EAAOF,EAAPE,IACDC,EAAYF,EAAKG,kBAAkBC,MAEzC,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,KACE,6BAAWC,IAAAA,UAAX,MAAiCJ,GACjC,wBAAMK,IAAI,YAAYC,KAAI,GAAKF,IAAAA,WAGjC,4BACE,gBAAC,IAAD,CACEG,kBAAmB,gBAAC,IAAD,KAAWP,GAC9BQ,SAAU,gBAAC,IAAD,CAAaP,UAAWA,IAClCQ,WAAY,gBAAC,KAAD,CAAWC,QAASZ,IAChCa,QAAS,gBAAC,KAAD,WAqDnB","sources":["webpack://gatsby-starter-lunash/./src/components/atoms/Subtitle.tsx","webpack://gatsby-starter-lunash/./src/components/pages/TagPage.tsx"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nexport const Subtitle: React.FC = ({children}) => {\n  return (\n    <Wrapper>\n      <Text>#{children}</Text>\n    </Wrapper>\n  );\n};\n\nconst Text = styled.div`\n  font-size: 30px;\n  color: ${(props) => props.theme.color.baseLight};\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 30px;\n  background: ${(props) => props.theme.color.baseDark};\n  margin-top: 20px;\n`;\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport {graphql} from 'gatsby';\nimport config from '../../../data/SiteConfig';\nimport {TagPageContext} from '../../../gatsby-node/types';\nimport {Layout} from '../organisms/Layout';\nimport {ArticleList} from '../organisms/ArticleList';\nimport {Subtitle} from '../atoms/Subtitle';\nimport {MarkdownRemarkEdge} from '../../types';\nimport {AuthorCard} from '../molecules';\nimport {ArticleListLayout} from '../organisms/ArticleListLayout';\nimport {Paginator} from '../atoms';\n\ntype Props = {\n  pageContext: TagPageContext;\n  data: {allMarkdownRemark: TagPageQuery};\n};\nexport const TagPage: React.FC<Props> = ({pageContext, data}) => {\n  const {tag} = pageContext;\n  const postEdges = data.allMarkdownRemark.edges;\n\n  return (\n    <Layout>\n      <Helmet>\n        <title>{`${config.siteTitle} | ${tag}`}</title>\n        <link rel=\"canonical\" href={`${config.siteUrl}`} />\n      </Helmet>\n\n      <main>\n        <ArticleListLayout\n          articleListHeader={<Subtitle>{tag}</Subtitle>}\n          articles={<ArticleList postEdges={postEdges} />}\n          pagination={<Paginator context={pageContext} />}\n          profile={<AuthorCard />}\n        />\n      </main>\n    </Layout>\n  );\n};\n\nexport const tagPageQuery = graphql`\n  query TagPageQuery($tag: String, $skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      sort: {fields: [fields____createdAt], order: DESC}\n      limit: $limit\n      skip: $skip\n      filter: {frontmatter: {tags: {in: [$tag]}}}\n    ) {\n      edges {\n        node {\n          fields {\n            _slug\n            _createdAt\n            _updatedAt\n          }\n          excerpt(truncate: true)\n          timeToRead\n          frontmatter {\n            title\n            tags\n            category\n            cover {\n              publicURL\n              childImageSharp {\n                gatsbyImageData(\n                  layout: FIXED\n                  aspectRatio: 1.0\n                  width: 150\n                  placeholder: BLURRED\n                )\n              }\n              extension\n            }\n            createdAt\n            updatedAt\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport interface TagPageQuery {\n  edges: MarkdownRemarkEdge[];\n}\n\nexport default TagPage;\n"],"names":["Subtitle","children","Wrapper","Text","styled","props","theme","color","baseLight","baseDark","TagPage","pageContext","data","tag","postEdges","allMarkdownRemark","edges","config","rel","href","articleListHeader","articles","pagination","context","profile"],"sourceRoot":""}