{"version":3,"sources":["webpack:///./src/components/organisms/ArticlePreviewList.tsx","webpack:///./src/components/atoms/CategoryBanner.tsx","webpack:///./src/components/templates/CategoryTemplate.tsx"],"names":["ArticlePreviewList","postEdges","context","description","key","edge","postInfo","Wrapper","styled","props","MainArea","AsideArea","AsideItem","Text","colors","CategoryBanner","categoryName","CategoryTemplate","pageContext","data","category","config","rel","href","siteUrl","style","margin"],"mappings":"2FAAA,+FAIaA,EAAqB,SAAC,GAAyC,IAAvCC,EAAuC,EAAvCA,UAAWC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,YACrD,OAAQ,yBACN,2BAEE,2BACGF,EAAA,KAAc,mBAAW,uBAAoBG,IAAKC,mBAAzB,MAAsDC,SAAUD,QAE5F,uBAAWH,QAASA,KAGtB,yBACE,yBACE,sBAXN,UAgBEK,EAAUC,IAAH,kFAAGA,CAAH,qGAKC,SAAAC,GAAK,OAAIA,eAAJ,kBAEbC,EAAWF,IAAH,mFAAGA,CAAH,CAAd,+CAKMG,EAAYH,IAAH,sFAAGA,CAAH,8FAKD,SAAAC,GAAK,OAAIA,eAAJ,kBAEbG,EAAYJ,IAAH,oFAAGA,CAAH,2DAGO,SAAAC,GAAK,OAAIA,cAAJ,U,oMCxCrBI,EAAOL,IAAH,+EAAGA,CAAH,CAAV,oBAGMD,EAAUC,IAAH,kFAAGA,CAAH,kGAKGM,IALH,qBAMFA,IANX,mBAQaC,EAAiB,SAAC,GAAsB,IAApBC,EAAoB,EAApBA,aAC7B,OAAQ,yBACN,8BADF,KCRSC,EAAmB,SAAC,GAA0B,IAAxBC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KACpCC,EAAaF,EADkC,SAEjDjB,EAAYkB,oBAAlB,MACA,OAAQ,2BACN,2BACE,+BAAWE,IAAX,gBADF,GAEE,0BAAMC,IAAN,YAAsBC,KAAI,GAAKF,IAAOG,WAGxC,uBAAoBvB,UAApB,EAA0CC,QAA1C,EAAgEC,YAAa,yBAAKsB,MAAO,CAAEC,OAAQ,WAC7F,qBAAgBV,aAAcI,SAyC1C","file":"component---src-components-templates-category-template-tsx-32f9a5d80756bd947130.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { Paginator, ArticlesPreviewWrapper } from '../atoms';\nimport { AuthorCard, ArticlePreviewCard } from '../molecules';\nexport const ArticlePreviewList = ({ postEdges, context, description, }) => {\n    return (<Wrapper>\n      <MainArea>\n        {description}\n        <ArticlesPreviewWrapper>\n          {postEdges.map((edge) => (<ArticlePreviewCard key={edge.node.frontmatter.title} postInfo={edge}/>))}\n        </ArticlesPreviewWrapper>\n        <Paginator context={context}/>\n      </MainArea>\n\n      <AsideArea>\n        <AsideItem>\n          <AuthorCard />\n        </AsideItem>\n      </AsideArea>\n    </Wrapper>);\n};\nconst Wrapper = styled.div `\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  margin: 0 ${props => props.theme.layout.marginVertical}px;\n`;\nconst MainArea = styled.div `\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n`;\nconst AsideArea = styled.aside `\n  flex: 0;\n  flex-direction: column;\n  justify-content: space-between;\n  min-width: 300px;\n  margin: 0 ${props => props.theme.layout.marginVertical};\n`;\nconst AsideItem = styled.div `\n  padding: 40px;\n  border-radius: 10px;\n  background-color: ${props => props.theme.color.white};\n`;\n","import React from 'react';\nimport { colors } from '../../../data/color';\nimport styled from 'styled-components';\nconst Text = styled.div `\n  font-size: 30px;\n`;\nconst Wrapper = styled.div `\n  padding: 30px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: ${colors.DEPRECATED_grayLight};\n  color: ${colors.DEPRECATED_black1};\n`;\nexport const CategoryBanner = ({ categoryName, }) => {\n    return (<Wrapper>\n      <Text>ðŸš€{categoryName}</Text>\n    </Wrapper>);\n};\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport { graphql } from 'gatsby';\nimport config from '../../../data/SiteConfig';\nimport Layout from '../organisms/Layout';\nimport { ArticlePreviewList } from '../organisms/ArticlePreviewList';\nimport { CategoryBanner } from '../atoms/CategoryBanner';\nexport const CategoryTemplate = ({ pageContext, data }) => {\n    const { category } = pageContext;\n    const postEdges = data.allMarkdownRemark.edges;\n    return (<Layout>\n      <Helmet>\n        <title>{`${config.siteTitle} | ${category}`}</title>\n        <link rel=\"canonical\" href={`${config.siteUrl}`}/>\n      </Helmet>\n\n      <ArticlePreviewList postEdges={postEdges} context={pageContext} description={<div style={{ margin: '0 30px' }}>\n            <CategoryBanner categoryName={category}/>\n          </div>}/>\n    </Layout>);\n};\nexport const categoryPageQuery = graphql `\n  query CategoryPageQuery($category: String, $skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      sort: {fields: [fields____createdAt], order: DESC}\n      limit: $limit\n      skip: $skip\n      filter: {frontmatter: {category: {eq: $category}}}\n    ) {\n      edges {\n        node {\n          fields {\n            _slug\n            _createdAt\n            _updatedAt\n          }\n          excerpt(truncate: true)\n          timeToRead\n          frontmatter {\n            title\n            tags\n            cover {\n              publicURL\n              childImageSharp {\n                fluid {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n              extension\n            }\n            createdAt\n            updatedAt\n          }\n        }\n      }\n    }\n  }\n`;\nexport default CategoryTemplate;\n"],"sourceRoot":""}